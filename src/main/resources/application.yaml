logging:
  level:
    root: INFO
management:
  endpoint:
    health:
      show-details: "always"
  security:
    enabled: false
  endpoints:
    web:
      base-path: /
spring:
  main:
    allow-bean-definition-overriding: true
  flyway:
    enabled: false
  security:
    enabled: false
  datasource:
    url: jdbc:postgresql://${CAMUNDA_DB_HOST:localhost}:${CAMUNDA_DB_PORT:5432}/${CAMUNDA_DB_NAME:camunda}${CAMUNDA_DB_CONN_OPTIONS:}
    username: ${CAMUNDA_DB_USER_NAME:camunda}
    password: ${CAMUNDA_DB_PASSWORD:}
  config:
    import: "optional:configtree:/mnt/secrets/camunda/"
camunda:
  api:
    auth:
      enabled: true
  ui:
    auth:
      enabled: false
  bpm:
    authorization:
      enabled: true
    admin-user:
      id: admin
      password: ${CAMUNDA_ADMIN_PASSWORD:admin}
      firstName: Admin
    filter:
      create: All tasks
    generic-properties:
      properties:
        generalResourceWhitelistPattern: '[.a-zA-Z0-9@_-]+'
    database:
#    We manage database versioning through flyway. Using this can cause the schema to go out of sync.
      schema-update: false

    webapp:
      application-path: /
camundaGroups:
  platops:
    adGroupId: e7ea2042-4ced-45dd-8ae3-e051c6551789
    tenantId: platops
    groupId: platops
    accessControl: user
  work-allocation:
    adGroupId: cdeb331b-adfe-46a7-a2c8-a628e2d35d96
    tenantId: wa
    groupId: wa
    accessControl: user
    s2sServiceNames:
      - wa_camunda_pipeline_upload
      - wa_task_management_api
      - wa_task_configuration_api
      - wa_workflow_api
      - wa_case_event_handler
      - wa_task_monitor
  ia:
    adGroupId: b16db4e7-5cd6-409a-9f10-632089d91ff5
    tenantId: ia
    groupId: ia
    accessControl: user
    s2sServiceNames:
      - wa_task_management_api
      - wa_task_configuration_api
      - wa_workflow_api
      - wa_case_event_handler
      - wa_task_monitor
  civil-unspecified:
    adGroupId: 40c33f5a-24d0-4b22-a923-df8a80a59cd9
    tenantId: civil-unspecified
    groupId: civil-unspecified
    accessControl: user
    s2sServiceNames:
      - unspec-service
  civil:
    adGroupId: ca5067a5-f554-4f6a-9eda-e93a1190d7ec
    tenantId: civil
    groupId: civil
    accessControl: user
    s2sServiceNames:
      - civil-service 
  prl:
    adGroupId: 882d8512-688b-48b1-8ce2-05fd49d90478
    tenantId: privatelaw
    groupId: privatelaw
    accessControl: user
    s2sServiceNames:
      - prl_cos_api
  et:
    adGroupId: 9e5f2197-c008-4c95-add2-d4548b55e99b
    tenantId: EMPLOYMENT
    groupId: EMPLOYMENT
    accessControl: user
    s2sServiceNames:
      - et-cos
camundaAdminGroupId: e7ea2042-4ced-45dd-8ae3-e051c6551789
camundaAccess:
  user:
    deploymentAccess: true
    taskAccess: true
    processDefinition: true
    processInstance: true
    batchAccess: true
    decisionDefinitionAccess: true
    optimiseAccess: true

server:
  servlet:
    context-path: /
  port: 8999
idam:
  s2s-auth:
    url: ${S2S_URL:http://localhost:4552}
    name: ${S2S_NAME_CAMUNDA_BPM:camunda_bpm}
    secret: ${S2S_SECRET_CAMUNDA_BPM:AAAAAAAAAAAAAAAA}

task-management-api:
  url: ${TASK_MANAGEMENT_API_URL:http://localhost:8087}

configuration:
  urlPath: ${TASK_CONFIGURATION_URL_PATH:task-configuration}
  maxRetries: ${MAX_TASK_CONFIGURATION_RETRIES:3}
  autoConfigureTasks: ${WA_AUTO_CONFIGURE_TASKS_ENABLED:true}

---
spring:
  config:
    activate:
      on-profile: springauth
    import: "optional:configtree:/mnt/secrets/camunda/"
  security:
    enabled: true
    oauth2:
      client:
        registration:
          azure:
            provider: azure
            client-id: ${CLIENT_ID:}
            client-secret: ${CLIENT_SECRET:}
            authorization-grant-type: authorization_code
            scope:
              - openid
        provider:
          azure:
            issuer-uri: ${ISSUER_URI:https://sts.windows.net/531ff96d-0ae9-462a-8d2d-bec7c0b42082/}
camunda:
  ui:
    auth:
      enabled: true
